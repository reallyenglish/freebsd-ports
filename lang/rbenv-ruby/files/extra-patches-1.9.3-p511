--- common.mk.orig	2011-05-17 21:19:20.689620679 -0400
+++ common.mk	2011-05-17 21:19:28.688621223 -0400
@@ -256,7 +256,7 @@
 install-capi: capi pre-install-capi do-install-capi post-install-capi
 pre-install-capi:: install-prereq
 do-install-capi: $(PREP)
-	$(INSTRUBY) --make="$(MAKE)" $(INSTRUBY_ARGS) --install=capi
+	@$(NULLCMD)
 post-install-capi::
 	@$(NULLCMD)
 
@@ -738,7 +738,6 @@
 	$(BASERUBY) -I$(srcdir) $(srcdir)/tool/compile_prelude.rb $(srcdir)/prelude.rb $@
 
 prelude.c: $(srcdir)/tool/compile_prelude.rb $(RBCONFIG) \
-	   $(srcdir)/lib/rubygems/defaults.rb $(srcdir)/lib/rubygems/custom_require.rb \
 	   $(PRELUDE_SCRIPTS) $(PREP)
 	$(COMPILE_PRELUDE) $(PRELUDE_SCRIPTS) $@
 
--- configure.in.orig	2014-02-14 20:52:53.000000000 +0900
+++ configure.in	2014-09-07 15:25:14.000000000 +0900
@@ -1184,11 +1184,11 @@
 [superux*], [	ac_cv_func_setitimer=no
 		],
 [	LIBS="-lm $LIBS"])
-AC_CHECK_LIB(crypt, crypt)
-AC_CHECK_LIB(dl, dlopen)	# Dynamic linking for SunOS/Solaris and SYSV
-AC_CHECK_LIB(dld, shl_load)	# Dynamic linking for HP-UX
-AC_CHECK_LIB(socket, socketpair)	# SunOS/Solaris
-AC_CHECK_LIB(rt, clock_gettime)	# GNU/Linux
+AC_SEARCH_LIBS(crypt, crypt)
+AC_SEARCH_LIBS(dlopen, dl)	# Dynamic linking for SunOS/Solaris and SYSV
+AC_SEARCH_LIBS(shl_load, dld)	# Dynamic linking for HP-UX
+AC_SEARCH_LIBS(socketpair, socket)	# SunOS/Solaris
+AC_SEARCH_LIBS(clock_gettime, rt) # GNU/Linux
 if test "${enable_win95}" = maybe; then
     AC_HAVE_LIBRARY(unicows, [enable_win95=yes], [enable_win95=no])
 fi
@@ -1834,7 +1834,7 @@
 fi
 
 if test x"$enable_pthread" = xyes; then
-    for pthread_lib in thr pthread pthreads c c_r root; do
+    for pthread_lib in pthread thr pthreads c c_r root; do
 	AC_CHECK_LIB($pthread_lib, pthread_kill,
 		     rb_with_pthread=yes, rb_with_pthread=no)
 	if test "$rb_with_pthread" = "yes"; then break; fi
@@ -1848,6 +1848,7 @@
 	[c],    [],
 	[root], [],
 	[c_r],  [MAINLIBS="-pthread $MAINLIBS"],
+	[pthread],  [MAINLIBS="-pthread $MAINLIBS"],
 	        [AS_CASE(["$target_os"],
 		    [openbsd*], [LIBS="-pthread $LIBS"],
 		    [LIBS="-l$pthread_lib $LIBS"])])
@@ -1933,11 +1934,8 @@
 
 AS_CASE(["$target_os"],
 [freebsd*], [
-    AC_CHECK_HEADERS([/usr/local/include/execinfo.h])
-    if test "x$ac_cv_header__usr_local_include_execinfo_h" = xyes; then :
-	RUBY_APPEND_OPTION(CPPFLAGS, -I/usr/local/include)
-	LDFLAGS="${LDFLAGS:+$LDFLAGS }-L/usr/local/lib"
-	DLDFLAGS="${DLDFLAGS:+$DLDFLAGS }-L/usr/local/lib"
+    AC_CHECK_HEADERS([execinfo.h])
+    if test "x$ac_cv_header_execinfo_h" = xyes; then :
 	AC_CHECK_LIB([execinfo], [backtrace])
     fi])
 AC_CHECK_FUNCS(backtrace)
@@ -2086,7 +2084,6 @@
 			: ${LDSHARED='$(CC) -shared'}
 			if test "$rb_cv_binary_elf" = yes; then
 			    LDFLAGS="$LDFLAGS -rdynamic"
-			    DLDFLAGS="$DLDFLAGS "'-Wl,-soname,$(.TARGET)'
 			else
 			  test "$GCC" = yes && test "$rb_cv_prog_gnu_ld" = yes || LDSHARED="ld -Bshareable"
 			fi
@@ -2393,6 +2390,7 @@
     [freebsd*|dragonfly*], [
 	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR)'
+	LIBRUBY_DLDFLAGS='-Wl,-soname,$(LIBRUBY_SO)'
 	if test "$rb_cv_binary_elf" != "yes" ; then
 	    LIBRUBY_SO="$LIBRUBY_SO.\$(TEENY)"
 	    LIBRUBY_ALIASES=''
--- cont.c.orig	2012-02-16 22:31:17.691397569 -0500
+++ cont.c	2012-02-16 22:31:31.507395417 -0500
@@ -15,7 +15,7 @@
 #include "gc.h"
 #include "eval_intern.h"
 
-#if ((defined(_WIN32) && _WIN32_WINNT >= 0x0400) || (defined(HAVE_GETCONTEXT) && defined(HAVE_SETCONTEXT))) && !defined(__NetBSD__) && !defined(sun) && !defined(FIBER_USE_NATIVE)
+#if ((defined(_WIN32) && _WIN32_WINNT >= 0x0400) || (defined(HAVE_GETCONTEXT) && defined(HAVE_SETCONTEXT))) && !defined(__NetBSD__) && !defined(__FreeBSD__) && !defined(sun) && !defined(FIBER_USE_NATIVE)
 #define FIBER_USE_NATIVE 1
 
 /* FIBER_USE_NATIVE enables Fiber performance improvement using system
--- ./ext/dl/extconf.rb.orig   2010-02-25 22:49:20.000000000 +0000
+++ ./ext/dl/extconf.rb        2014-02-18 22:06:44.000000000 +0000
@@ -1,7 +1,8 @@
 require 'mkmf'

 if RbConfig::CONFIG['GCC'] == 'yes'
-  $CFLAGS << " -fno-defer-pop -fno-omit-frame-pointer"
+  $CFLAGS << " -fno-defer-pop" unless have_macro("__clang__")
+  $CFLAGS << " -fno-omit-frame-pointer"
 end

 $INSTALLFILES = [
--- lib/mkmf.rb.orig	2008-01-03 21:11:38.000000000 +0300
+++ lib/mkmf.rb	2008-01-03 21:11:55.000000000 +0300
@@ -148,7 +148,7 @@
 path = File.expand_path($0)
 $extmk = path[0, topdir.size+1] == topdir+"/" && %r"\A(ext|enc|tool)\z" =~ File.dirname(path[topdir.size+1..-1])
 if not $extmk and File.exist?(($hdrdir = RbConfig::CONFIG["rubyhdrdir"]) + "/ruby/ruby.h")
-  $topdir = $hdrdir
+  $topdir = $hdrdir + "/" + "#{CONFIG['arch']}/ruby/"
   $top_srcdir = $hdrdir
   $arch_hdrdir = $hdrdir + "/$(arch)"
 elsif File.exist?(($hdrdir = ($top_srcdir ||= topdir) + "/include")  + "/ruby.h") and
--- tool/mkconfig.rb.orig	2013-01-15 07:03:47.000000000 +0000
+++ tool/mkconfig.rb	2013-02-12 03:29:09.829833511 +0000
@@ -148,7 +148,8 @@
 
 drive = File::PATH_SEPARATOR == ';'
 
-prefix = "/#{v_runtime[:libdir] || 'lib'}/ruby/#{version}/#{arch}"
+major, minor, *rest = RUBY_VERSION.split('.')
+prefix = "/lib/ruby/#{major}.#{minor}/#{arch}"
 print "  TOPDIR = File.dirname(__FILE__).chomp!(#{prefix.dump})\n"
 print "  DESTDIR = ", (drive ? "TOPDIR && TOPDIR[/\\A[a-z]:/i] || " : ""), "'' unless defined? DESTDIR\n"
 print <<'ARCH' if universal
--- tool/rbinstall.rb.orig	2011-07-30 07:19:11.000000000 -0700
+++ tool/rbinstall.rb	2011-11-19 00:08:56.000000000 -0800
@@ -292,6 +292,7 @@
 
 bindir = CONFIG["bindir"]
 libdir = CONFIG["libdir"]
+libdatadir = CONFIG["prefix"] + "/" + "libdata"
 archhdrdir = rubyhdrdir = CONFIG["rubyhdrdir"]
 archhdrdir += "/" + CONFIG["arch"]
 rubylibdir = CONFIG["rubylibdir"]
@@ -349,7 +350,7 @@
 install?(:local, :arch, :data) do
   pc = CONFIG["ruby_pc"]
   if pc and File.file?(pc) and File.size?(pc)
-    prepare "pkgconfig data", pkgconfigdir = File.join(libdir, "pkgconfig")
+    prepare "pkgconfig data", pkgconfigdir = File.join(libdatadir, "pkgconfig")
     install pc, pkgconfigdir, :mode => $data_mode
   end
 end
@@ -531,54 +532,6 @@
   end
 end
 
-install?(:ext, :comm, :gem) do
-  $:.unshift(File.join(srcdir, "lib"))
-  require("rubygems.rb")
-  gem_dir = Gem.default_dir
-  directories = Gem.ensure_gem_subdirectories(gem_dir)
-  prepare "default gems", gem_dir, directories
-
-  spec_dir = File.join(gem_dir, directories.grep(/^spec/)[0])
-  File.foreach(File.join(srcdir, "defs/default_gems")) do |line|
-    line.chomp!
-    line.sub!(/\s*#.*/, '')
-    next if line.empty?
-    words = []
-    line.scan(/\G\s*([^\[\]\s]+|\[([^\[\]]*)\])/) do
-      words << ($2 ? $2.split : $1)
-    end
-    name, src, execs = *words
-    next unless name and src
-    execs ||= []
-    src = File.join(srcdir, src)
-    version = open(src) {|f| f.find {|s| /^\s*\w*VERSION\s*=(?!=)/ =~ s}} or next
-    version = version.split(%r"=\s*", 2)[1].strip[/\A([\'\"])(.*?)\1/, 2]
-    full_name = "#{name}-#{version}"
-
-    puts "#{" "*30}#{name} #{version}"
-    open_for_install(File.join(spec_dir, "#{full_name}.gemspec"), $data_mode) do
-      <<-GEMSPEC
-Gem::Specification.new do |s|
-  s.name = #{name.dump}
-  s.version = #{version.dump}
-  s.summary = "This #{name} is bundled with Ruby"
-  s.executables = #{execs.inspect}
-end
-      GEMSPEC
-    end
-
-    unless execs.empty? then
-      bin_dir = File.join(gem_dir, 'gems', full_name, 'bin')
-      makedirs(bin_dir)
-
-      execs.each do |exec|
-        exec = File.join(srcdir, 'bin', exec)
-        install(exec, bin_dir, :mode => $prog_mode)
-      end
-    end
-  end
-end
-
 parse_args()
 
 include FileUtils
